import 'bootstrap/dist/css/bootstrap.min.css';
import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { renderToHTML } from 'next/dist/server/render'
import { useState } from 'react';

const inter = Inter({ subsets: ['latin'] })

type Memo = {
  title :string,
  author:string,
  body  :string,
  filepath:string,
  id: number,
  date:string,
  tags:string[]
};

export default function MemoView(): JSX.Element {
  const memoAry=[
    {
      title : "memo1",
      author: "user0",
      body: "this is body of memo1.\n and this is second line.",
      filepath: "",
      id: 1,
      date: "2023-05-14",
      tags: [ "tagA", "tagB" ,"tagC"]
    },
    {
      title : "memo2",
      author: "user5",
      body: "this is body of memo2.\n and this is second line.\n and this is third line.",
      filepath: "",
      id: 2,
      date: "2023-06-1",
      tags: [ "tagB", "tagD" ,"tagC"]
    }
  ]

  const [readingMemo, setReadingMemo] = useState(0);
  
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* 3-column */}
      <div className="container-fluid">
        <div className="row vh-100 overflow-auto">
          <div className="col-3 h-100 border left-column overflow-auto">
          </div>
          <div className="center-column col-3 h-100 border overflow-auto">
            <MemoSelector handler={setReadingMemo} />
          </div>
          <div className="right-column col-6 h-100 border border-warning overflow-auto">
            <MemoDetailedView memo={memoAry[readingMemo]}/>
          </div>
        </div>
      </div>
    </>
  )
}

function MemoSelector({handler}:any): JSX.Element{ 
  return (
    <div className='memoSelector m-1'>
      <button type='button' className="btn btn-primary m-1" 
        onClick={()=>{ handler(0) }}>
        Memo1
      </button>
      <button type='button' className="btn btn-primary m-1"
        onClick={()=>{ handler(1) }}>
        Memo2
      </button>
    </div>
  );
}

function MemoDetailedView({memo}:{memo?:Memo}){
  if(memo == null){
    return(
      <div className='detailedView m-1'>
      </div>
    );
  }

  return(
    <div className='detailedView m-1'>
      <div className='title'>
        <h1> {memo.title} </h1>
      </div>
      <div className='author'>
        <h2> Author : {memo.author} </h2>
      </div>
      <PreviewThm filepath={memo.filepath} />
      <div className='body'>
        { memo.body.split("\n").map((e) => <div>{e}</div>) }
      </div>
      <br/>
      <div className='date'>
        {memo.date}
      </div>
      <div className='tags'>
        { memo.tags.map((tag) => "#"+tag+" ") }
      </div>
    </div>
  );
}

function PreviewThm({filepath}:{filepath:string}): JSX.Element{
  if(filepath.endsWith(".pdf")){ return <PrevPDF/>; }
  if(filepath.endsWith(".png")){ return <PrevImg/>;}
  return <PrevErr/>;
}

function PrevPDF(): JSX.Element{ return <></>; }
function PrevImg(): JSX.Element{ return <></>; }
function PrevErr(): JSX.Element{ return <></>; }